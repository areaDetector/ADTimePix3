# Author: K. Gofron
# Date: 2022/6/2

##################################################################
# Define all of your PV records here in the following form:
#
# record(RECORD_TYPE, "$(P)$(R)PVName"){
#   field(DTYP, "data type")
#   field(INP/OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))PV_NAME")
#   field(VAL, "value")
#   field(SCAN, "I/O Intr")
# }
#
# Consult other .template files for guides on how to write specific PVs
#
# The PV_NAME at the end of the INP or OUT field of the record is the 
# PVString defined in ADTimpPix.h.
#
# example: #define ADTimePixServer "PV_NAME"
# C='CHIP1', 'CHIP2', ...
#
##################################################################


record(longin, "$(P)$(R)$(C)_CP_PLL_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_CP_PLL")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_S1_OFF_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_DISCS1OFF")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_S1_ON_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_DISCS1ON")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_S2_OFF_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_DISCS2OFF")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_S2_ON_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_DISCS2ON")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Ikrum_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_IKRUM")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_PixelDAC_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_PIXELDAC")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Preamp_OFF_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_PREAMPOFF")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Preamp_ON_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_PREAMPON")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_TPbufferIn_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_TPBUFFERIN")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_TPbufferOut_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_TPBUFFEROUT")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_PLL_Vcntrl_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_PLL_VCNTRL")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_VPreamp_NCAS_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VPREAMPNCAS")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_VTP_coarse_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VTP_COARSE")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_VTP_fine_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VTP_FINE")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Vfbk_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VFBK")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Vth_coarse_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VTH_COARSE")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Vth_fine_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_VTH_FINE")
  field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)$(C)_Adjust_RBV"){
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_ADJUST")
  field(SCAN, "I/O Intr")
}

# Detector Chip Layout
record(stringin, "$(P)$(R)$(C)_Layout_RBV"){
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TPX3_$(C)_LAYTOUT")
  field(SCAN, "I/O Intr")
}